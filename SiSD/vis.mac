# Use this open statement to create an OpenGL view:
/vis/open OGL 600x600-0+0

/vis/viewer/set/autoRefresh false
/vis/verbose errors

# Draw geometry:
/vis/drawVolume

# Specify viewer values:
/vis/viewer/set/viewpointThetaPhi 90 90
#/vis/viewer/pan 30 22 cm
#/vis/viewer/zoom 128
/vis/viewer/set/hiddenMarker true

# Draw smooth trajectories at end of event, showing trajectory points
# as markers 2 pixels wide:
/vis/scene/add/trajectories smooth
/vis/modeling/trajectories/create/drawByParticleID
/vis/modeling/trajectories/drawByParticleID-0/default/setDrawStepPts true
/vis/modeling/trajectories/drawByParticleID-0/default/setStepPtsSize 4
/vis/modeling/trajectories/drawByParticleID-0/default/setStepPtsColour red
/vis/scene/endOfEventAction accumulate

# Axis and geometry
/vis/set/colour red
/vis/scene/add/axes 0 0 0 1 cm

/vis/geometry/set/visibility World 0 false
/vis/geometry/set/visibility Detector 0 false

# Ending
/vis/viewer/set/autoRefresh true
/vis/verbose warnings

/tracking/verbose 0
/run/beamOn 100
